
connect:
  image: "localhost:5001/optin-poc-kafka-connector:4.2.0"
    # Overrides the image tag whose default is the chart appVersion.
  bootstrapServer: kafka-cluster-kafka-bootstrap:9092
#  tls:
#    trustedCertificates:
#      - secretName: my-cluster-cluster-ca-cert
#        certificate: ca.crt
postgres:
  local: true
  source:
    deploymentActive: false
#    name: postgres-source
#    wal_level: "logical"
#    connection:
#      host: "pgsource-coc.postgres.database.azure.com"
#      port: 5432
#      database: "postgres"
#      user: "psqladmin@pgsink"
#      password: "n3PHbHlRlq8H"
#    topic:
#      prefix: "sourcedb" # output will be written in a topic with this prefix
#    table:
#      include:
#        list: "public.customers" # list of tables to sync
#    message:
#      key:
#        columns: "public.customers:customer_id"
  sink:
    deploymentActive: true
    name:  postgres-sink
    connection:
      host: "sink-database-minimal-cluster"
      port: 5432
      database: "postgres"
      user: "sinkuser"
      password: "XqSmA0OzxIqrGVkRh0BtaRsxPVyXySxIOlCSYLCckmxKDiO23Q9PVajFYSPyK1c6"
    topics: consent.preference.sink
    autoCreate: true
    autoEvolve: true
    deleteEnabled: true
    insertMode: upsert
    pkMode: record_key
    pkFields: customerId,target
    valueConverter: "org.apache.kafka.connect.json.JsonConverter"
    keyConverter: "org.apache.kafka.connect.json.JsonConverter"
    tableNameFormat: channel_consents
    fieldsWhitelist: channel,target,source,time
    enableValueSchema: true
    enableKeySchema: true
    behaviorOnNullValues: delete



replicaCount: 1
image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ""
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name: ""
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  port: 9092
ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}

