/**
 * Generated by orval v6.11.0 üç∫
 * Do not edit manually.
 * Database Info Service
 * OpenAPI spec version: 1.0.0
 */
import axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';
import { useQuery } from '@tanstack/react-query';
import type {
  UseQueryOptions,
  QueryFunction,
  UseQueryResult,
  QueryKey,
} from '@tanstack/react-query';
import type { SinkDatabase, Error } from './model-database';

/**
 * @summary Get customer consents
 */
export const getSinkDatabase = (
  options?: AxiosRequestConfig
): Promise<AxiosResponse<SinkDatabase>> => {
  return axios.get(`/api/database`, options);
};

export const getGetSinkDatabaseQueryKey = () => [`/api/database`];

export type GetSinkDatabaseQueryResult = NonNullable<
  Awaited<ReturnType<typeof getSinkDatabase>>
>;
export type GetSinkDatabaseQueryError = AxiosError<Error>;

export const useGetSinkDatabase = <
  TData = Awaited<ReturnType<typeof getSinkDatabase>>,
  TError = AxiosError<Error>
>(options?: {
  query?: UseQueryOptions<
    Awaited<ReturnType<typeof getSinkDatabase>>,
    TError,
    TData
  >;
  axios?: AxiosRequestConfig;
}): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetSinkDatabaseQueryKey();

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getSinkDatabase>>> = ({
    signal,
  }) => getSinkDatabase({ signal, ...axiosOptions });

  const query = useQuery<
    Awaited<ReturnType<typeof getSinkDatabase>>,
    TError,
    TData
  >(queryKey, queryFn, queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryKey;

  return query;
};
